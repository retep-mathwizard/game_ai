#!/usr/bin/env python3
import skilstak.colors as c
import time
import random
import string
import operator
alphabet = list(string.ascii_lowercase + string.ascii_uppercase)
numbers = ['1','2','3','4','5','6','7','8','9']
scores = []
def add_score(score,name):
    score_str = (score,name)
    scores.append(score_str)
    with open('nimon.txt','w') as f:
        for s in scores:
            f.write(str(s[0]) + ' = ' + s[1] + '\n')
        f.close()

def get_scores():
    with open('nimon.txt') as f:
        scores = f.read().strip().split('\n')
        f.close()
    high_scores = []
    names = []
    for score in scores:
        num = int(score.split(' = ')[0])
        name = score.split(' = ')[1]
        high_scores.append(num)
        names.append(name)
    zipped = sorted(list(zip(high_scores,names)), reverse = True)
    #http://stackoverflow.com/questions/6618515/sorting-list-based-on-values-from-another-list
    return zipped

def print_scores(scores_list):
    
    for score_tuple in scores_list[:5]:

        print(score_tuple[0],score_tuple[1])
def game():
    seq = [random.choice(numbers)]
    print('HIGHSCORES\n--------------')
    print_scores(get_scores())
    print('---------------')
    input("""Welcome to nimon!
When you start the round, a series of numbers will appear, with a letter beside it to tell sequences apart. 
You will input the sequence of numbers that appears, and if you get it right, you will proceed to the next round.

    Press r to reprint the level (it will speed up every time you use it, so good luck)
    Press a to add an iteration
    Press s to remove an iteration

    Press enter to continue\n""")
    level = 1
    iterations = 1
    speed = 0.4
    while True:
        print(c.cl + 'Level',level)
        input('Press enter to start the round\n')
        print(c.cl)
        for position, number in enumerate(seq):
            print(number + '|' + alphabet[position])
            time.sleep(speed)
            print(c.clear)
        x = input('> ')
        if x == 'testingmode':
            level_add = int(input('what level to add? . '))
            for count in range(level_add):
                seq.append(random.choice(numbers))
            level += level_add
        elif x == 'r':
            if speed >= 0.15:
                speed -= 0.05
            continue
        elif x == 'a':
            iterations += 1
        elif x == 's':
            if iterations > 1:
                iterations -= 1
            continue
        elif x == ''.join(seq):
            print('Well done!')
            time.sleep(0.3)
            for count in range(iterations):
                seq.append(random.choice(numbers))
            level += iterations
        else:
            break
    print('You ending on round',level)
    print('You put ' + x + ' when it was really ' + ''.join(seq))
    return level - iterations

def end_game(level, scores):
    if len(scores) > 5:
        worst_highscore = scores[4][0]
        if level >= worst_highscore:
            print('\nAdd your high score!')
            name = input('Your Name > ')
            add_score(level, name)
    elif len(scores) <= 5:
        print('\nAdd your high score!')
        name = input('Your Name > ')
        add_score(level, name)


try:
    while True:
        level = game()
        scores = get_scores()
        end_game(level, scores)
        again = input('Would you like to play again? y/n > ').strip().lower()
        if again == 'y':
            
            continue
        elif again == 'n':
            break
            exit()
except KeyboardInterrupt:
    exit()
